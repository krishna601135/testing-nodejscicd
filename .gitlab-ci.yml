include:
  - local: '.deploy-template-dev.yml'
  - local: '.deploy-template-preprod.yml'
  - local: '.deploy-template-prod.yml'

workflow:
  rules: 
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: "1.2"
  DEV_SERVER: "3.86.212.191"
  DEV_ENDPOINT: http://ec2-3-86-212-191.compute-1.amazonaws.com:3000
  PREPROD_SERVER: "54.87.169.215"
  PREPROD_ENDPOINT: http://ec2-54-87-169-215.compute-1.amazonaws.com:3000
  PROD_SERVER: "100.26.219.16"
  PROD_ENDPOINT:  http://ec2-100-26-219-16.compute-1.amazonaws.com.com:3000

stages:
  - test
  - build
  - deploy_dev
  - deploy_preprod
  - deploy_prod
  
run_unit_tests:
  image: node:17-alpine3.14
  stage: test
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - app/node_modules
  tags:
    - docker
    - local
  before_script:
    - cd app
    - npm install
  script:
     - npm test
  artifacts:
    when: always
    paths:
       - app/junit.xml
    reports:
      junit: app/junit.xml


build_image:
  stage: build
  tags:
    - own
    - ubuntu
    - vm
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
  
push_image:
  stage: build
  needs:
    - build_image
  tags:
    - own
    - ubuntu
    - vm
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY  
  script:
    - docker push $IMAGE_NAME:$IMAGE_TAG 

deploy_to_dev:
  tags: 
    - ubuntu
    - vm

deploy_to_preprod:
  tags: 
    - ubuntu
    - vm

deploy_to_prod:
  tags: 
    - ubuntu
    - vm

