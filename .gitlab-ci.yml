include:
  - template: Jobs/SAST.gitlab-ci.yml
  - local: '.deploy-template-dev.yml'
  - local: '.deploy-template-preprod.yml'
  - local: '.deploy-template-prod.yml'


workflow:
  rules: 
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always
variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: "2.0"
  DEV_SERVER: "44.208.22.142"
  DEV_ENDPOINT: http://ec2-44-208-22-142.compute-1.amazonaws.com:3000
  PREPROD_SERVER: "3.93.213.7"
  PREPROD_ENDPOINT: http://ec2-3-93-213-7.compute-1.amazonaws.com:3000
  PROD_SERVER: "44.203.251.130"
  PROD_ENDPOINT:  http://ec2-44-203-251-130.compute-1.amazonaws.com:3000


stages:
  - test
  - build
  - deploy_dev
  - deploy_preprod
  - deploy_prod

run_unit_tests:
  stage: test
  image: node:17-alpine3.14 
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - app/node_modules/
  tags:
    - docker000
  before_script:
    - cd app
    - npm install
  script:
    - npm test
  artifacts:
    when: always
    paths:
       - app/junit.xml
    reports:
      junit: app/junit.xml

run_lint_checks:
  stage: test
  image: node:17-alpine3.14
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - app/node_modules/
    policy: pull
  tags:
    - docker000
  before_script:
    - cd app
    - npm install
  script:
    - echo "Running lint checks"

sast:
  stage: test
  
build_image:
  stage: build
  tags:
    - shell000
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .

push_image:
  stage: build
  needs:
    - build_image
  tags:
    - shell000
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy_to_dev:
  tags: 
    - shell000

deploy_to_preprod:
  tags: 
    - shell000

deploy_to_prod:
  tags: 
    - shell000

  






 
